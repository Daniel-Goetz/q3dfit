param, perror
-------------
list --> sepfitpars turns into a numpy array

parinfo
-------
list of dictionaries --> sepfitpars turns it into astropy Table

linelist
--------
    Generates an astropy Table of lines from the master files linelist_air.tbl
    and linelist_vac.tbl
    
    Returns:
    
       An astropy Table of lines with keywords 'name','linelab','lines'
       Example: 'Lyalpha', 'Ly \$\alpha\$', 1215.67
    
    Parameters:
    
       No required parameters; by default the entire tables are read from the 
       linelist_air.tbl and linelist_vac.tbl, recomputed into vacuum and returned
    
    Optional parameters:
    
       inlines: a list of strings to match against the 'name' part of the 
           master list (default is all)
       linelab: boolean variable (True or False) -- whether to return the 
           Tex-friendly labels for the lines (default is True)
       vacuum: boolean variable (True or False) -- whether to return 
           wavelengths in vacuum, default is True (otherwise returns air 
           wavelengths); conversion is equation 3 from Morton et al. 1991
           ApJSS 77 119
       waveunit: a string variable, 'A' or 'micron', default is Angstrom
    
    Examples:
        
        1. 
        
        u=linelist()
        
        will return all lines in the catalog with labels and central wavelengths
        in vacuum in Angstroms.
        
        2.
        
        mylist=['Paa', 'Halpha', 'Paa']
        u=linelist(inlines=mylist)
        
        will produce a table of vacuum wavelengths in Angstroms for three lines
        in the same order as given, and a warning there is a duplicated line 
        in mylist
        
        3.
        
        mylist=['Paa', 'Halpha', 'junk']
        u=linelist(inlines=mylist,vacuum=False,waveunit='micron',linelab=False)
        
        will produce a table of air wavelengths in micron for two lines, report
        that one line is not in the line list, convert to air wavelengths and 
        to microns and remove the line lables

        4.
        
        To get the central wavelength for an individual feature by name:
            
        wv=np.array(linelist(['Halpha'])['lines'])
        
        OR
        
        u=linelist()
        wv=np.array(u['lines'][(u['name']=='Halpha')])      


constants
---------
scipy.constants

outstr
------
IDL structure output by IFSF_FITSPEC --> dict

initdat
-------
IDL structure read by IFSF through calling master initialization function --> dict read by IFSF through calling master initialization function

